{"ast":null,"code":"module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return; /*DONT_INTERSECT*/\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return; /*DONT_INTERSECT*/\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return; /*COLLINEAR*/\n  }\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}","map":{"version":3,"names":["module","exports","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","x","y","sameSign","Math","abs"],"sources":["C:/Users/emmed/Documents/char_test/frontend/node_modules/dagre-d3/lib/intersect/intersect-line.js"],"sourcesContent":["module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}