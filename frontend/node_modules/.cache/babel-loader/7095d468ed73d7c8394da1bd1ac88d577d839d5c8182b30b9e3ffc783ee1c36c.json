{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmed\\\\Documents\\\\char_test\\\\frontend\\\\src\\\\components\\\\TypingText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingText = ({\n  text,\n  speed = 50,\n  className = '',\n  onComplete = () => {}\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isComplete, setIsComplete] = useState(false);\n  useEffect(() => {\n    let index = 0;\n    let timer;\n    const type = () => {\n      if (index < text.length) {\n        setDisplayText(prev => prev + text.charAt(index));\n        index++;\n        timer = setTimeout(type, speed);\n      } else {\n        setIsComplete(true);\n        onComplete();\n      }\n    };\n    timer = setTimeout(type, speed);\n    return () => clearTimeout(timer);\n  }, [text, speed, onComplete]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `${className} ${!isComplete ? 'typing-cursor' : ''}`,\n    children: displayText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingText, \"MRqqAuIGFVGNDjTMFldCybapRA0=\");\n_c = TypingText;\nexport default TypingText;\nvar _c;\n$RefreshReg$(_c, \"TypingText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingText","text","speed","className","onComplete","_s","displayText","setDisplayText","isComplete","setIsComplete","index","timer","type","length","prev","charAt","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emmed/Documents/char_test/frontend/src/components/TypingText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TypingText = ({ text, speed = 50, className = '', onComplete = () => { } }) => {\r\n    const [displayText, setDisplayText] = useState('');\r\n    const [isComplete, setIsComplete] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        let timer;\r\n\r\n        const type = () => {\r\n            if (index < text.length) {\r\n                setDisplayText(prev => prev + text.charAt(index));\r\n                index++;\r\n                timer = setTimeout(type, speed);\r\n            } else {\r\n                setIsComplete(true);\r\n                onComplete();\r\n            }\r\n        };\r\n\r\n        timer = setTimeout(type, speed);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [text, speed, onComplete]);\r\n\r\n    return (\r\n        <span className={`${className} ${!isComplete ? 'typing-cursor' : ''}`}>\r\n            {displayText}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TypingText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG,EAAE;EAAEC,SAAS,GAAG,EAAE;EAAEC,UAAU,GAAGA,CAAA,KAAM,CAAE;AAAE,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,IAAIa,KAAK,GAAG,CAAC;IACb,IAAIC,KAAK;IAET,MAAMC,IAAI,GAAGA,CAAA,KAAM;MACf,IAAIF,KAAK,GAAGT,IAAI,CAACY,MAAM,EAAE;QACrBN,cAAc,CAACO,IAAI,IAAIA,IAAI,GAAGb,IAAI,CAACc,MAAM,CAACL,KAAK,CAAC,CAAC;QACjDA,KAAK,EAAE;QACPC,KAAK,GAAGK,UAAU,CAACJ,IAAI,EAAEV,KAAK,CAAC;MACnC,CAAC,MAAM;QACHO,aAAa,CAAC,IAAI,CAAC;QACnBL,UAAU,CAAC,CAAC;MAChB;IACJ,CAAC;IAEDO,KAAK,GAAGK,UAAU,CAACJ,IAAI,EAAEV,KAAK,CAAC;IAE/B,OAAO,MAAMe,YAAY,CAACN,KAAK,CAAC;EACpC,CAAC,EAAE,CAACV,IAAI,EAAEC,KAAK,EAAEE,UAAU,CAAC,CAAC;EAE7B,oBACIL,OAAA;IAAMI,SAAS,EAAE,GAAGA,SAAS,IAAI,CAACK,UAAU,GAAG,eAAe,GAAG,EAAE,EAAG;IAAAU,QAAA,EACjEZ;EAAW;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf,CAAC;AAACjB,EAAA,CA7BIL,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}