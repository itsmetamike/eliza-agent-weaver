{"ast":null,"code":"\"use strict\";\n\n/* IMPORT */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"../utils\");\nvar reusable_1 = require(\"../channels/reusable\");\n/* RGB */\nvar RGB = {\n  /* VARIABLES */\n  re: /^rgba?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?)))?\\s*?\\)$/i,\n  /* API */\n  parse: function (color) {\n    var charCode = color.charCodeAt(0);\n    if (charCode !== 114 && charCode !== 82) return; // 'r'/'R'\n    var match = color.match(RGB.re);\n    if (!match) return;\n    var r = match[1],\n      isRedPercentage = match[2],\n      g = match[3],\n      isGreenPercentage = match[4],\n      b = match[5],\n      isBluePercentage = match[6],\n      a = match[7],\n      isAlphaPercentage = match[8];\n    return reusable_1.default.set({\n      r: utils_1.default.channel.clamp.r(isRedPercentage ? parseFloat(r) * 2.55 : parseFloat(r)),\n      g: utils_1.default.channel.clamp.g(isGreenPercentage ? parseFloat(g) * 2.55 : parseFloat(g)),\n      b: utils_1.default.channel.clamp.b(isBluePercentage ? parseFloat(b) * 2.55 : parseFloat(b)),\n      a: a ? utils_1.default.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n    }, color);\n  },\n  stringify: function (channels) {\n    var r = channels.r,\n      g = channels.g,\n      b = channels.b,\n      a = channels.a;\n    if (a < 1) {\n      // RGBA\n      return \"rgba(\" + utils_1.default.lang.round(r) + \", \" + utils_1.default.lang.round(g) + \", \" + utils_1.default.lang.round(b) + \", \" + utils_1.default.lang.round(a) + \")\";\n    } else {\n      // RGB\n      return \"rgb(\" + utils_1.default.lang.round(r) + \", \" + utils_1.default.lang.round(g) + \", \" + utils_1.default.lang.round(b) + \")\";\n    }\n  }\n};\n/* EXPORT */\nexports.default = RGB;","map":{"version":3,"names":["Object","defineProperty","exports","value","utils_1","require","reusable_1","RGB","re","parse","color","charCode","charCodeAt","match","r","isRedPercentage","g","isGreenPercentage","b","isBluePercentage","a","isAlphaPercentage","default","set","channel","clamp","parseFloat","stringify","channels","lang","round"],"sources":["C:/Users/emmed/Documents/char_test/frontend/node_modules/react-mermaid2/node_modules/khroma/dist/color/rgb.js"],"sourcesContent":["\"use strict\";\n/* IMPORT */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar reusable_1 = require(\"../channels/reusable\");\n/* RGB */\nvar RGB = {\n    /* VARIABLES */\n    re: /^rgba?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?)))?\\s*?\\)$/i,\n    /* API */\n    parse: function (color) {\n        var charCode = color.charCodeAt(0);\n        if (charCode !== 114 && charCode !== 82)\n            return; // 'r'/'R'\n        var match = color.match(RGB.re);\n        if (!match)\n            return;\n        var r = match[1], isRedPercentage = match[2], g = match[3], isGreenPercentage = match[4], b = match[5], isBluePercentage = match[6], a = match[7], isAlphaPercentage = match[8];\n        return reusable_1.default.set({\n            r: utils_1.default.channel.clamp.r(isRedPercentage ? parseFloat(r) * 2.55 : parseFloat(r)),\n            g: utils_1.default.channel.clamp.g(isGreenPercentage ? parseFloat(g) * 2.55 : parseFloat(g)),\n            b: utils_1.default.channel.clamp.b(isBluePercentage ? parseFloat(b) * 2.55 : parseFloat(b)),\n            a: a ? utils_1.default.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n        }, color);\n    },\n    stringify: function (channels) {\n        var r = channels.r, g = channels.g, b = channels.b, a = channels.a;\n        if (a < 1) { // RGBA\n            return \"rgba(\" + utils_1.default.lang.round(r) + \", \" + utils_1.default.lang.round(g) + \", \" + utils_1.default.lang.round(b) + \", \" + utils_1.default.lang.round(a) + \")\";\n        }\n        else { // RGB\n            return \"rgb(\" + utils_1.default.lang.round(r) + \", \" + utils_1.default.lang.round(g) + \", \" + utils_1.default.lang.round(b) + \")\";\n        }\n    }\n};\n/* EXPORT */\nexports.default = RGB;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}