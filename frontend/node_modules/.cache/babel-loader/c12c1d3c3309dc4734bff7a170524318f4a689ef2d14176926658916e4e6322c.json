{"ast":null,"code":"\"use strict\";\n\n/* IMPORT */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar reusable_1 = require(\"../channels/reusable\");\nvar consts_1 = require(\"../consts\");\n/* HEX */\nvar Hex = {\n  /* VARIABLES */\n  re: /^#((?:[a-f0-9]{2}){2,4}|[a-f0-9]{3})$/i,\n  /* API */\n  parse: function (color) {\n    if (color.charCodeAt(0) !== 35) return; // '#'\n    var match = color.match(Hex.re);\n    if (!match) return;\n    var hex = match[1],\n      dec = parseInt(hex, 16),\n      length = hex.length,\n      hasAlpha = length % 4 === 0,\n      isFullLength = length > 4,\n      multiplier = isFullLength ? 1 : 17,\n      bits = isFullLength ? 8 : 4,\n      bitsOffset = hasAlpha ? 0 : -1,\n      mask = isFullLength ? 255 : 15;\n    return reusable_1.default.set({\n      r: (dec >> bits * (bitsOffset + 3) & mask) * multiplier,\n      g: (dec >> bits * (bitsOffset + 2) & mask) * multiplier,\n      b: (dec >> bits * (bitsOffset + 1) & mask) * multiplier,\n      a: hasAlpha ? (dec & mask) * multiplier / 255 : 1\n    }, color);\n  },\n  stringify: function (channels) {\n    var r = channels.r,\n      g = channels.g,\n      b = channels.b,\n      a = channels.a;\n    if (a < 1) {\n      // #RRGGBBAA\n      return \"#\" + consts_1.DEC2HEX[Math.round(r)] + consts_1.DEC2HEX[Math.round(g)] + consts_1.DEC2HEX[Math.round(b)] + consts_1.DEC2HEX[Math.round(a * 255)];\n    } else {\n      // #RRGGBB\n      return \"#\" + consts_1.DEC2HEX[Math.round(r)] + consts_1.DEC2HEX[Math.round(g)] + consts_1.DEC2HEX[Math.round(b)];\n    }\n  }\n};\n/* EXPORT */\nexports.default = Hex;","map":{"version":3,"names":["Object","defineProperty","exports","value","reusable_1","require","consts_1","Hex","re","parse","color","charCodeAt","match","hex","dec","parseInt","length","hasAlpha","isFullLength","multiplier","bits","bitsOffset","mask","default","set","r","g","b","a","stringify","channels","DEC2HEX","Math","round"],"sources":["C:/Users/emmed/Documents/char_test/frontend/node_modules/react-mermaid2/node_modules/khroma/dist/color/hex.js"],"sourcesContent":["\"use strict\";\n/* IMPORT */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar reusable_1 = require(\"../channels/reusable\");\nvar consts_1 = require(\"../consts\");\n/* HEX */\nvar Hex = {\n    /* VARIABLES */\n    re: /^#((?:[a-f0-9]{2}){2,4}|[a-f0-9]{3})$/i,\n    /* API */\n    parse: function (color) {\n        if (color.charCodeAt(0) !== 35)\n            return; // '#'\n        var match = color.match(Hex.re);\n        if (!match)\n            return;\n        var hex = match[1], dec = parseInt(hex, 16), length = hex.length, hasAlpha = length % 4 === 0, isFullLength = length > 4, multiplier = isFullLength ? 1 : 17, bits = isFullLength ? 8 : 4, bitsOffset = hasAlpha ? 0 : -1, mask = isFullLength ? 255 : 15;\n        return reusable_1.default.set({\n            r: ((dec >> (bits * (bitsOffset + 3))) & mask) * multiplier,\n            g: ((dec >> (bits * (bitsOffset + 2))) & mask) * multiplier,\n            b: ((dec >> (bits * (bitsOffset + 1))) & mask) * multiplier,\n            a: hasAlpha ? (dec & mask) * multiplier / 255 : 1\n        }, color);\n    },\n    stringify: function (channels) {\n        var r = channels.r, g = channels.g, b = channels.b, a = channels.a;\n        if (a < 1) { // #RRGGBBAA\n            return \"#\" + consts_1.DEC2HEX[Math.round(r)] + consts_1.DEC2HEX[Math.round(g)] + consts_1.DEC2HEX[Math.round(b)] + consts_1.DEC2HEX[Math.round(a * 255)];\n        }\n        else { // #RRGGBB\n            return \"#\" + consts_1.DEC2HEX[Math.round(r)] + consts_1.DEC2HEX[Math.round(g)] + consts_1.DEC2HEX[Math.round(b)];\n        }\n    }\n};\n/* EXPORT */\nexports.default = Hex;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}