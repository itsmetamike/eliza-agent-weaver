{"ast":null,"code":"'use strict';\n\nvar invalidPrototcolRegex = /^(%20|\\s)*(javascript|data)/im;\nvar ctrlCharactersRegex = /[^\\x20-\\x7E]/gmi;\nvar urlSchemeRegex = /^([^:]+):/gm;\nvar relativeFirstCharacters = ['.', '/'];\nfunction isRelativeUrl(url) {\n  return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\nfunction sanitizeUrl(url) {\n  if (!url) {\n    return 'about:blank';\n  }\n  var urlScheme, urlSchemeParseResults;\n  var sanitizedUrl = url.replace(ctrlCharactersRegex, '').trim();\n  if (isRelativeUrl(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n  urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n  if (!urlSchemeParseResults) {\n    return 'about:blank';\n  }\n  urlScheme = urlSchemeParseResults[0];\n  if (invalidPrototcolRegex.test(urlScheme)) {\n    return 'about:blank';\n  }\n  return sanitizedUrl;\n}\nmodule.exports = {\n  sanitizeUrl: sanitizeUrl\n};","map":{"version":3,"names":["invalidPrototcolRegex","ctrlCharactersRegex","urlSchemeRegex","relativeFirstCharacters","isRelativeUrl","url","indexOf","sanitizeUrl","urlScheme","urlSchemeParseResults","sanitizedUrl","replace","trim","match","test","module","exports"],"sources":["C:/Users/emmed/Documents/char_test/frontend/node_modules/react-mermaid2/node_modules/@braintree/sanitize-url/index.js"],"sourcesContent":["'use strict';\n\nvar invalidPrototcolRegex = /^(%20|\\s)*(javascript|data)/im;\nvar ctrlCharactersRegex = /[^\\x20-\\x7E]/gmi;\nvar urlSchemeRegex = /^([^:]+):/gm;\nvar relativeFirstCharacters = ['.', '/']\n\nfunction isRelativeUrl(url) {\n  return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n\nfunction sanitizeUrl(url) {\n  if (!url) {\n    return 'about:blank';\n  }\n\n  var urlScheme, urlSchemeParseResults;\n  var sanitizedUrl = url.replace(ctrlCharactersRegex, '').trim();\n\n  if (isRelativeUrl(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n\n  urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n\n  if (!urlSchemeParseResults) {\n    return 'about:blank';\n  }\n\n  urlScheme = urlSchemeParseResults[0];\n\n  if (invalidPrototcolRegex.test(urlScheme)) {\n    return 'about:blank';\n  }\n\n  return sanitizedUrl;\n}\n\nmodule.exports = {\n  sanitizeUrl: sanitizeUrl\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,qBAAqB,GAAG,+BAA+B;AAC3D,IAAIC,mBAAmB,GAAG,iBAAiB;AAC3C,IAAIC,cAAc,GAAG,aAAa;AAClC,IAAIC,uBAAuB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAExC,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,OAAOF,uBAAuB,CAACG,OAAO,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrD;AAEA,SAASE,WAAWA,CAACF,GAAG,EAAE;EACxB,IAAI,CAACA,GAAG,EAAE;IACR,OAAO,aAAa;EACtB;EAEA,IAAIG,SAAS,EAAEC,qBAAqB;EACpC,IAAIC,YAAY,GAAGL,GAAG,CAACM,OAAO,CAACV,mBAAmB,EAAE,EAAE,CAAC,CAACW,IAAI,CAAC,CAAC;EAE9D,IAAIR,aAAa,CAACM,YAAY,CAAC,EAAE;IAC/B,OAAOA,YAAY;EACrB;EAEAD,qBAAqB,GAAGC,YAAY,CAACG,KAAK,CAACX,cAAc,CAAC;EAE1D,IAAI,CAACO,qBAAqB,EAAE;IAC1B,OAAO,aAAa;EACtB;EAEAD,SAAS,GAAGC,qBAAqB,CAAC,CAAC,CAAC;EAEpC,IAAIT,qBAAqB,CAACc,IAAI,CAACN,SAAS,CAAC,EAAE;IACzC,OAAO,aAAa;EACtB;EAEA,OAAOE,YAAY;AACrB;AAEAK,MAAM,CAACC,OAAO,GAAG;EACfT,WAAW,EAAEA;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}