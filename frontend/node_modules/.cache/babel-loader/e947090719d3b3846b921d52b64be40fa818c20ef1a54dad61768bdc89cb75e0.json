{"ast":null,"code":"\"use strict\";\n\n/* IMPORT */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"../utils\");\nvar reusable_1 = require(\"../channels/reusable\");\n/* HSL */\nvar HSL = {\n  /* VARIABLES */\n  re: /^hsla?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(?:deg|grad|rad|turn)?)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(%)?))?\\s*?\\)$/i,\n  hueRe: /^(.+?)(deg|grad|rad|turn)$/i,\n  /* HELPERS */\n  _hue2deg: function (hue) {\n    var match = hue.match(HSL.hueRe);\n    if (match) {\n      var number = match[1],\n        unit = match[2];\n      switch (unit) {\n        case 'grad':\n          return utils_1.default.channel.clamp.h(parseFloat(number) * .9);\n        case 'rad':\n          return utils_1.default.channel.clamp.h(parseFloat(number) * 180 / Math.PI);\n        case 'turn':\n          return utils_1.default.channel.clamp.h(parseFloat(number) * 360);\n      }\n    }\n    return utils_1.default.channel.clamp.h(parseFloat(hue));\n  },\n  /* API */\n  parse: function (color) {\n    var charCode = color.charCodeAt(0);\n    if (charCode !== 104 && charCode !== 72) return; // 'h'/'H'\n    var match = color.match(HSL.re);\n    if (!match) return;\n    var h = match[1],\n      s = match[2],\n      l = match[3],\n      a = match[4],\n      isAlphaPercentage = match[5];\n    return reusable_1.default.set({\n      h: HSL._hue2deg(h),\n      s: utils_1.default.channel.clamp.s(parseFloat(s)),\n      l: utils_1.default.channel.clamp.l(parseFloat(l)),\n      a: a ? utils_1.default.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n    }, color);\n  },\n  stringify: function (channels) {\n    var h = channels.h,\n      s = channels.s,\n      l = channels.l,\n      a = channels.a;\n    if (a < 1) {\n      // HSLA\n      return \"hsla(\" + utils_1.default.lang.round(h) + \", \" + utils_1.default.lang.round(s) + \"%, \" + utils_1.default.lang.round(l) + \"%, \" + a + \")\";\n    } else {\n      // HSL\n      return \"hsl(\" + utils_1.default.lang.round(h) + \", \" + utils_1.default.lang.round(s) + \"%, \" + utils_1.default.lang.round(l) + \"%)\";\n    }\n  }\n};\n/* EXPORT */\nexports.default = HSL;","map":{"version":3,"names":["Object","defineProperty","exports","value","utils_1","require","reusable_1","HSL","re","hueRe","_hue2deg","hue","match","number","unit","default","channel","clamp","h","parseFloat","Math","PI","parse","color","charCode","charCodeAt","s","l","a","isAlphaPercentage","set","stringify","channels","lang","round"],"sources":["C:/Users/emmed/Documents/char_test/frontend/node_modules/react-mermaid2/node_modules/khroma/dist/color/hsl.js"],"sourcesContent":["\"use strict\";\n/* IMPORT */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar reusable_1 = require(\"../channels/reusable\");\n/* HSL */\nvar HSL = {\n    /* VARIABLES */\n    re: /^hsla?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(?:deg|grad|rad|turn)?)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(%)?))?\\s*?\\)$/i,\n    hueRe: /^(.+?)(deg|grad|rad|turn)$/i,\n    /* HELPERS */\n    _hue2deg: function (hue) {\n        var match = hue.match(HSL.hueRe);\n        if (match) {\n            var number = match[1], unit = match[2];\n            switch (unit) {\n                case 'grad': return utils_1.default.channel.clamp.h(parseFloat(number) * .9);\n                case 'rad': return utils_1.default.channel.clamp.h(parseFloat(number) * 180 / Math.PI);\n                case 'turn': return utils_1.default.channel.clamp.h(parseFloat(number) * 360);\n            }\n        }\n        return utils_1.default.channel.clamp.h(parseFloat(hue));\n    },\n    /* API */\n    parse: function (color) {\n        var charCode = color.charCodeAt(0);\n        if (charCode !== 104 && charCode !== 72)\n            return; // 'h'/'H'\n        var match = color.match(HSL.re);\n        if (!match)\n            return;\n        var h = match[1], s = match[2], l = match[3], a = match[4], isAlphaPercentage = match[5];\n        return reusable_1.default.set({\n            h: HSL._hue2deg(h),\n            s: utils_1.default.channel.clamp.s(parseFloat(s)),\n            l: utils_1.default.channel.clamp.l(parseFloat(l)),\n            a: a ? utils_1.default.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n        }, color);\n    },\n    stringify: function (channels) {\n        var h = channels.h, s = channels.s, l = channels.l, a = channels.a;\n        if (a < 1) { // HSLA\n            return \"hsla(\" + utils_1.default.lang.round(h) + \", \" + utils_1.default.lang.round(s) + \"%, \" + utils_1.default.lang.round(l) + \"%, \" + a + \")\";\n        }\n        else { // HSL\n            return \"hsl(\" + utils_1.default.lang.round(h) + \", \" + utils_1.default.lang.round(s) + \"%, \" + utils_1.default.lang.round(l) + \"%)\";\n        }\n    }\n};\n/* EXPORT */\nexports.default = HSL;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}